// api/pay.js
// Bu endpoint "payment draft" Ã¼retir. GerÃ§ek aÄŸdaki tx'i HENÃœZ gÃ¶ndermiyor.
// Client (index.html) burayÄ± POST eder, biz de geri Ã¶deme taslaÄŸÄ±nÄ± dÃ¶neriz.

module.exports = function handler(req, res) {
  // Sadece POST'e izin veriyoruz.
  if (req.method !== "POST") {
    return res.status(405).json({
      ok: false,
      error: "Only POST allowed. Send JSON body."
    });
  }

  try {
    // body'den reminder bilgisini alÄ±yoruz
    // (index.html ÅŸu alanlarÄ± yolluyor olacak)
    const {
      note,          // string: kullanÄ±cÄ±nÄ±n yazdÄ±ÄŸÄ± hatÄ±rlatma
      datetimeISO,   // string ISO tarih: "2025-10-09T18:44"
      usdAmount      // sayÄ±: kaÃ§ USD deÄŸerlik Ã¶deme istiyoruz (Ã¶r: 0.05)
    } = req.body || {};

    // Basit validation
    if (!note || !datetimeISO || !usdAmount) {
      return res.status(400).json({
        ok: false,
        error: "Missing required fields: note, datetimeISO, usdAmount"
      });
    }

    // Ã–demelerin gideceÄŸi adres = SENÄ°N ADRESÄ°N ğŸ’¸
    const PAYMENT_ADDRESS = "0xfA34687f5BdCF7DcBeBbF00e7A81c38188cf6772";

    // USD -> ETH Ã§evirme (ÅŸu an sahte sabit kur)
    // VarsayÄ±m: 1 ETH = 3000 USD
    // Bunu sonra gerÃ§ek on-chain/price feed'e Ã§ekebiliriz ama MVP iÃ§in sabit.
    const usdToEth = (usd) => {
      const eth = usd / 3000;
      return eth;
    };

    const ethNeeded = usdToEth(Number(usdAmount));

    // Ethereum tx taslaÄŸÄ±:
    // value (wei deÄŸil ETH string olarak gÃ¶steriyoruz UI iÃ§in),
    // data: "0x" => normal ETH transferi
    const unsignedTx = {
      to: PAYMENT_ADDRESS,
      valueEth: ethNeeded.toFixed(8), // "0.00001667" gibi
      data: "0x"
    };

    // KullanÄ±cÄ±ya geri dÃ¶ndÃ¼ÄŸÃ¼mÃ¼z ÅŸey:
    // - reminder iÃ§eriÄŸi
    // - tarih
    // - tahmini Ã¶deme
    // - tx taslaÄŸÄ±
    return res.status(200).json({
      ok: true,
      reminder: {
        note,
        datetimeISO
      },
      payment: {
        usdAmount,
        ethNeeded,
        approxUsd: usdAmount, // zaten usdAmount
        unsignedTx,
        disclaimer:
          "This is only a draft transaction. It has NOT been sent or signed yet."
      }
    });
  } catch (err) {
    console.error("pay.js error:", err);
    return res.status(500).json({
      ok: false,
      error: "Unexpected error in /api/pay"
    });
  }
};

